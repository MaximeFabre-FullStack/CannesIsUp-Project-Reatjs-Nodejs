/** @jsx React.DOM */

var React = require('react/addons');

var Shadow = require('./Shadow');
var Ripple = require('./Ripple');

var css = (function () {/*

.button {
  color: black;
  margin: 0 0.29em;
  padding: 0.7em 0.57em;
  min-width: 5.14em;
  box-sizing: border-box;
  display: inline-block;
  position: relative;
  border: ;
  background: transparent;
  text-align: center;
  font: inherit;
  text-transform: uppercase;
  outline: none;
  border-radius: 3px;
  -webkit-user-select: none;
  user-select: none;
  cursor: pointer;
}
*/}).toString().match(/[^]*\/\*([^]*)\*\/\}$/)[1];

//  /\/\*!?(?:\@preserve)?\s*(?:\r\n|\n)([\s\S]*?)(?:\r\n|\n)\s*\*\//

var style = document.createElement('style');
style.rel = 'stylesheet';
style.type = 'text/css';
if(style.styleSheet)
  style.styleSheet.cssText = css
else
  style.appendChild(document.createTextNode(css))

document.head.appendChild(style);

var Button = React.createClass({displayName: 'Button',
  componentDidMount: function() {
    // We don't have a ref for the Ripple at initial render
    this.forceUpdate()
  },

  render: function() {
    var raised = this.props.raised;
    if (this.props.background)
      this.buttonStyle.backgroundColor = this.props.background;
    if (this.props.color)
      this.buttonStyle.backgroundColor = this.props.color;

    return this.transferPropsTo(
      React.DOM.div( {ref:"button", style:this.buttonStyle, className:"button"}, 
        Ripple( {elem:this.refs.button} ),
        raised ? Shadow(null ) : null,
        this.props.children
      )
    );
  },

  buttonStyle: {
/*    color: 'black',
    margin: '0 0.29em',
    padding: '0.7em 0.57em',
    minWidth: '5.14em',
    boxSizing: 'border-box',
    display: 'inline-block',
    position: 'relative',
    border: 0,
    background: 'transparent',
    textAlign: 'center',
    font: 'inherit',
    textTransform: 'uppercase',
    outline: 'none',
    borderRadius: '3px',
    webkitUserSelect: 'none',
    userSelect: 'none',
    cursor: 'pointer' */
  }
});

module.exports = Button;
